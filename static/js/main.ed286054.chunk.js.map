{"version":3,"sources":["components-phonebook/list-transition.module.css","components-phonebook/phonebook-transition.module.css","components-phonebook/notification.module.css","components-phonebook/ContactCreator.js","components-phonebook/ContactList.js","components-phonebook/Section.js","components-phonebook/FilterContact.js","components-phonebook/Notification.js","components-phonebook/Phonebook.js","App.js","index.js"],"names":["module","exports","ContactCreator","state","name","number","handleAddContact","target","value","setState","handleSubmit","e","createTask","props","preventDefault","onSubmit","this","className","type","required","onChange","Component","ContactList","items","removeContact","TransitionGroup","component","map","id","contact","CSSTransition","key","timeout","classNames","listTransition","onClick","Section","title","children","in","appear","phonebook","mountOnEnter","filterContact","onChangeFilter","Notification","Phonebook","contacts","filter","notification","changeFilter","contactId","prevState","showSortTask","toLowerCase","includes","contactName","some","item","setTimeout","uuidv4","savedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","sortTask","notificationStyles","unmountOnExit","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed286054.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"list-transition_enter__tnCkk\",\"enterActive\":\"list-transition_enterActive__2Fjo8\",\"exit\":\"list-transition_exit__15t5U\",\"exitActive\":\"list-transition_exitActive__1I2q5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"phonebook-transition_appear__8uz0L\",\"appearActive\":\"phonebook-transition_appearActive__3O6AR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"notification_enter__UIyZC\",\"enterActive\":\"notification_enterActive__2ltee\",\"exit\":\"notification_exit__8tGZv\",\"exitActive\":\"notification_exitActive__2wuLT\"};","import React, { Component } from \"react\";\n\nexport default class ContactCreator extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleAddContact = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    const { name, number } = this.state;\n    const { createTask } = this.props;\n    e.preventDefault();\n    createTask(name, number);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"group\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              required\n              value={this.state.name}\n              onChange={this.handleAddContact}\n            />\n            <span className=\"bar\"></span>\n            <label>Name</label>\n          </div>\n\n          <div className=\"group\">\n            <input\n              type=\"tel\"\n              name=\"number\"\n              required\n              value={this.state.number}\n              onChange={this.handleAddContact}\n            />\n            <span className=\"bar\"></span>\n            <label>Number </label>\n          </div>\n\n          <button className=\"glow-on-hover\" type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport listTransition from \"../components-phonebook/list-transition.module.css\";\n\nimport PropTypes from \"prop-types\";\n\nexport default class ContactList extends Component {\n  render() {\n    const { items, removeContact } = this.props;\n    return (\n      <TransitionGroup component=\"ul\" className=\"items\">\n        {items.map(({ id, name, contact }) => (\n          <CSSTransition key={id} timeout={400} classNames={listTransition}>\n            <li key={id} className=\"list\">\n              <div className=\"infoContact\">\n                <p>Name: {name}</p> <p>Tel. {contact}</p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"btn cross\"\n                onClick={() => removeContact(id)}\n              ></button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    );\n  }\n}\n\nContactList.propTypes = {\n  items: PropTypes.array.isRequired,\n  removeContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition } from \"react-transition-group\";\nimport phonebook from \"./phonebook-transition.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <CSSTransition\n        in={true}\n        appear={true}\n        key={title}\n        timeout={1100}\n        classNames={phonebook}\n        mountOnEnter\n      >\n        <h2>{title}</h2>\n      </CSSTransition>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nexport default function filterContact({ value, onChangeFilter }) {\n  return (\n    <div className=\"group\">\n      <input\n        type=\"text\"\n        value={value}\n        required\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n      <span className=\"bar\"></span>\n      <label>Search Contact </label>\n    </div>\n  );\n}\n\nfilterContact.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React from \"react\";\n\nconst Notification = () => (\n  <div className=\"notifi\">\n    <p>Contact already exsist!</p>\n  </div>\n);\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactCreator from \"./ContactCreator\";\nimport ContactList from \"./ContactList\";\nimport Section from \"./Section\";\nimport FilterContact from \"./FilterContact\";\nimport Notification from \"./Notification\";\nimport notificationStyles from \"./notification.module.css\";\n\nexport default class Phonebook extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    notification: false,\n  };\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem(\"contacts\");\n    if (savedContacts) {\n      this.setState({\n        contacts: JSON.parse(savedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  showSortTask = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  createTask = (contactName, number) => {\n    const sameName = this.state.contacts.some(\n      (item) => item.name === contactName\n    );\n\n    if (sameName) {\n      this.setState({\n        notification: true,\n      });\n      setTimeout(() => this.setState({ notification: false }), 4000);\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name: contactName,\n      contact: number,\n    };\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  render() {\n    const sortTask = this.showSortTask();\n    const { contacts, filter, notification } = this.state;\n    return (\n      <>\n        <CSSTransition\n          in={notification}\n          classNames={notificationStyles}\n          timeout={1000}\n          unmountOnExit\n        >\n          <Notification />\n        </CSSTransition>\n\n        <Section title=\"Phonebook\">\n          <ContactCreator createTask={this.createTask} />\n        </Section>\n        <Section\n          title={contacts.length > 0 ? \"Contacts\" : \"Do not have contacts\"}\n        >\n          {contacts.length > 1 && (\n            <FilterContact value={filter} onChangeFilter={this.changeFilter} />\n          )}\n\n          <ContactList items={sortTask} removeContact={this.removeContact} />\n        </Section>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport Phonebook from \"./components-phonebook/Phonebook\";\nexport default function App() {\n  return (\n    <>\n      <Phonebook />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"../src/styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}