{"version":3,"sources":["components-phonebook/ContactCreator.js","components-phonebook/ContactList.js","components-phonebook/Section.js","components-phonebook/FilterContact.js","components-phonebook/Phonebook.js","App.js","index.js"],"names":["ContactCreator","state","name","number","handleAddContact","target","value","setState","handleSubmit","e","createTask","props","preventDefault","onSubmit","this","type","placeholder","onChange","Component","ContactList","items","removeContact","className","map","id","contact","key","onClick","Section","title","children","filterContact","onChangeFilter","Phonebook","contacts","filter","changeFilter","contactId","prevState","showSortTask","toLowerCase","includes","contactName","some","item","alert","uuidv4","savedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","sortTask","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a0b668e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class ContactCreator extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleAddContact = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    const { name, number } = this.state;\n    const { createTask } = this.props;\n    e.preventDefault();\n    createTask(name, number);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"name\"\n              value={this.state.name}\n              onChange={this.handleAddContact}\n            />\n          </label>\n\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"tel.number\"\n              value={this.state.number}\n              onChange={this.handleAddContact}\n            />\n          </label>\n\n          <button type=\"submit\"> Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class ContactList extends Component {\n  render() {\n    const { items, removeContact } = this.props;\n    return (\n      <ul className=\"items\">\n        {items.map(({ id, name, contact }) => (\n          <li key={id} className=\"list\">\n            <p>{name}:</p> <p>{contact}</p>\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={() => removeContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nContactList.propTypes = {\n  items: PropTypes.array.isRequired,\n  removeContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.node,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nexport default function filterContact({ value, onChangeFilter }) {\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={value}\n        placeholder=\"Search Contact\"\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n}\n\nfilterContact.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactCreator from \"./ContactCreator\";\nimport ContactList from \"./ContactList\";\nimport Section from \"./Section\";\nimport FilterContact from \"./FilterContact\";\n\nexport default class Phonebook extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem(\"contacts\");\n    if (savedContacts) {\n      this.setState({\n        contacts: JSON.parse(savedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  showSortTask = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  createTask = (contactName, number) => {\n    const sameName = this.state.contacts.some(\n      (item) => item.name === contactName\n    );\n\n    if (sameName) {\n      alert(`${contactName} is already in contacts`);\n      return;\n    } else if (!contactName || !number) {\n      alert(\"Enter phone number or name\");\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name: contactName,\n      contact: number,\n    };\n\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n  render() {\n    const sortTask = this.showSortTask();\n    const { contacts, filter } = this.state;\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          <ContactCreator createTask={this.createTask} />\n        </Section>\n        <Section title={contacts.length > 0 && \"Contacts\"}>\n          {contacts.length > 1 && (\n            <FilterContact value={filter} onChangeFilter={this.changeFilter} />\n          )}\n\n          <ContactList items={sortTask} removeContact={this.removeContact} />\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Phonebook from \"./components-phonebook/Phonebook\";\nexport default function App() {\n  return (\n    <>\n      <Phonebook />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"../src/styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}